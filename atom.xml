<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>流星之绊</title>
  
  <subtitle>等待流星</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://wangyitao.github.io/"/>
  <updated>2019-12-14T14:54:11.006Z</updated>
  <id>https://wangyitao.github.io/</id>
  
  <author>
    <name>王以涛(Felix Wang)</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>vscode个性化配置打造最强的IDE</title>
    <link href="https://wangyitao.github.io/article/20191214.html"/>
    <id>https://wangyitao.github.io/article/20191214.html</id>
    <published>2019-12-14T14:30:47.000Z</published>
    <updated>2019-12-14T14:54:11.006Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-vscode的settings-json"><a href="#1-vscode的settings-json" class="headerlink" title="1. vscode的settings.json"></a>1. vscode的settings.json</h3><p>之前一直使用JetBrains全家桶来编写代码，python使用pycharm，前端使用webstorm，go使用goland，发现每换一种语言就要打开一个ide。最近偶然发现vscode的强大之处。故记录一下vscode的配置。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    // 美化vscode vscode图标</span><br><span class="line">    "workbench.iconTheme": "vscode-icons",</span><br><span class="line">    // 编辑器写代码优化配置</span><br><span class="line">    "files.autoSave": "onFocusChange",</span><br><span class="line">    "editor.fontSize": 20,</span><br><span class="line">    "editor.formatOnPaste": true,</span><br><span class="line">    "editor.formatOnSave": true,</span><br><span class="line">    "editor.formatOnType": true,</span><br><span class="line">    "editor.renderIndentGuides": false,</span><br><span class="line">    // 显示tab</span><br><span class="line">    "editor.renderControlCharacters": true,</span><br><span class="line">    // 显示空格</span><br><span class="line">    "editor.renderWhitespace": "all",</span><br><span class="line">    "workbench.colorCustomizations": &#123;</span><br><span class="line">        // 配置光标所在行的背景色</span><br><span class="line">        "editor.lineHighlightBackground": "#243535",</span><br><span class="line">        // 光标所在行的边框</span><br><span class="line">        "editor.lineHighlightBorder": "#242121",</span><br><span class="line">        // 光标颜色</span><br><span class="line">        "editorCursor.foreground": "#b6b6b6",</span><br><span class="line">    &#125;,</span><br><span class="line">    "files.insertFinalNewline": true,</span><br><span class="line">    "files.trimFinalNewlines": true,</span><br><span class="line">    "files.trimTrailingWhitespace": true,</span><br><span class="line">    "search.showLineNumbers": true,</span><br><span class="line">    "editor.mouseWheelZoom": true,</span><br><span class="line">    "editor.wordWrap": "on",</span><br><span class="line">    // 文件保存的时候要执行的操作</span><br><span class="line">    "editor.codeActionsOnSave": &#123;</span><br><span class="line">        // 格式化markdown</span><br><span class="line">        "source.fixAll.markdownlint": true,</span><br><span class="line">    &#125;,</span><br><span class="line">    // VScode 文件搜索区域配置</span><br><span class="line">    "search.exclude": &#123;</span><br><span class="line">        "**/dist": true,</span><br><span class="line">        "**/build": true,</span><br><span class="line">        "**/elehukouben": true,</span><br><span class="line">        "**/.git": true,</span><br><span class="line">        "**/node_modules": true,</span><br><span class="line">        "**/.svn": true,</span><br><span class="line">        "**/.DS_Store": true,</span><br><span class="line">        "**/.idea": true,</span><br><span class="line">        "**/.vscode": false,</span><br><span class="line">        "**/yarn.lock": true,</span><br><span class="line">        "**/tmp": true</span><br><span class="line">    &#125;,</span><br><span class="line">    // 排除文件搜索区域，比如node_modules(贴心的默认设置已经屏蔽了)</span><br><span class="line">    "files.exclude": &#123;</span><br><span class="line">        "**/.idea": true,</span><br><span class="line">        "**/yarn.lock": true,</span><br><span class="line">        "**/tmp": true,</span><br><span class="line">        "**/.git": true,</span><br><span class="line">        "**/node_modules": true,</span><br><span class="line">        "**/.svn": true,</span><br><span class="line">        "**/.DS_Store": true,</span><br><span class="line">        "**/.vscode": false,</span><br><span class="line">        "**/dist": true,</span><br><span class="line">        "**/build": true,</span><br><span class="line">        "**/.deploy_git": true,</span><br><span class="line">    &#125;,</span><br><span class="line">    // 配置文件关联</span><br><span class="line">    // 比如小程序中的 .wxss 这种文件，会把它作为css文件来处理，提供对应的css的语法提示，css的格式化等等。</span><br><span class="line">    "files.associations": &#123;</span><br><span class="line">        "*.wxss": "css",</span><br><span class="line">        "*.cjson": "jsonc",</span><br><span class="line">        "*.wxs": "javascript",</span><br><span class="line">        "*.ts": "typescript",</span><br><span class="line">        "*.vue": "vue",</span><br><span class="line">        "*.dart": "dart"</span><br><span class="line">    &#125;,</span><br><span class="line">    // go语言辅助</span><br><span class="line">    "go.formatTool": "goimports",</span><br><span class="line">    "go.useCodeSnippetsOnFunctionSuggest": true,</span><br><span class="line">    // python辅助</span><br><span class="line">    "python.autoComplete.addBrackets": true,</span><br><span class="line">    "python.linting.flake8Enabled": true,</span><br><span class="line">    // vue辅助</span><br><span class="line">    // 每次保存的时候将代码按eslint格式进行修复</span><br><span class="line">    "eslint.autoFixOnSave": true,</span><br><span class="line">    // 配置shell格式化</span><br><span class="line">    "shellformat.path": "C:\\Users\\felix\\go\\bin\\shfmt.exe",</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-vscode中配置的插件"><a href="#2-vscode中配置的插件" class="headerlink" title="2. vscode中配置的插件"></a>2. vscode中配置的插件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">1、Markdown All in One：书写Markdown利器</span><br><span class="line">2、markdownlint：检查markdown的语法</span><br><span class="line">3、Markdown PDF：将markdown，转换为pdf, html, png, jpeg。不过第一次使用需要chromium，自动下载比较慢。</span><br><span class="line">4、Auto Close Tag ：自动闭合HTML标签</span><br><span class="line">5、Auto Rename Tag 修改HTML标签时，自动修改匹配的标签</span><br><span class="line">6、autoDocstring：python的函数注释模板生成</span><br><span class="line">7、Better Comments：美化行注释</span><br><span class="line">8、Bracket Pair Colorizer：对成对儿的括号都会以不同的颜色进行区别</span><br><span class="line">9、Chinese (Simplified) Language Pack for Visual Studio Code：设置中文显示</span><br><span class="line">10、Code Runner：运行选中的代码，支持多种语言。</span><br><span class="line">11、Code Spell Checker：代码拼写检查</span><br><span class="line">12、Docker：docker官方扩展插件</span><br><span class="line">13、ESLint：是用来统一JavaScript代码风格的工具</span><br><span class="line">14、file-size：在编辑器左下角显示文件大小</span><br><span class="line">15、GitLens：每一行code的作者、提交时间、commit log 等信息，一目了然</span><br><span class="line">16、Go：go语言官方插件</span><br><span class="line">17、Guides：缩进参考，可以自定义缩进参考线</span><br><span class="line">18、Path Intellisense：自动路劲补全</span><br><span class="line">19、Python：python官方包</span><br><span class="line">20、shell-format：shell代码格式化</span><br><span class="line">21、shellman：shell代码提示</span><br><span class="line">22：vetur：非常好用的vue插件</span><br><span class="line">23、Vue 2 Snippets：vue2语法提示</span><br><span class="line">24、Vue 3 Snippets：vue3语法提示</span><br><span class="line">25、Vue Peek：查看vue定义，可以看到定义的源文件</span><br><span class="line">26、vscode-icons：比较好用的vscode图标主题</span><br></pre></td></tr></table></figure><h3 id="go配置以及shell配置"><a href="#go配置以及shell配置" class="headerlink" title="go配置以及shell配置"></a>go配置以及shell配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">由于shell-format用到的以及go使用到的二进制文件，下载比较麻烦，所以已经打包了一份本地的。下载之后把go中的文件放到gopath下面的bin文件夹下，sh下面的文件可以放在任何地方，然后在settings.json中指定&quot;shellformat.path&quot;。</span><br></pre></td></tr></table></figure><p><a href="https://github.com/wangyitao/diy_vscode/raw/master/diy_vscode_bin.zip" target="_blank" rel="noopener">下载链接</a></p><blockquote><p>ps: 自从用了vscode，就可以和JetBrains全家桶说拜拜了。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-vscode的settings-json&quot;&gt;&lt;a href=&quot;#1-vscode的settings-json&quot; class=&quot;headerlink&quot; title=&quot;1. vscode的settings.json&quot;&gt;&lt;/a&gt;1. vscode的settings.
      
    
    </summary>
    
      <category term="vscode" scheme="https://wangyitao.github.io/categories/vscode/"/>
    
    
      <category term="vscode" scheme="https://wangyitao.github.io/tags/vscode/"/>
    
  </entry>
  
  <entry>
    <title>【ElasticStack】ElasticSearch聚合分析与数据建模</title>
    <link href="https://wangyitao.github.io/article/20191121.html"/>
    <id>https://wangyitao.github.io/article/20191121.html</id>
    <published>2019-11-21T14:30:47.000Z</published>
    <updated>2019-12-14T12:29:07.679Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-ElasticSearch中的聚合分析"><a href="#1-ElasticSearch中的聚合分析" class="headerlink" title="1. ElasticSearch中的聚合分析"></a>1. ElasticSearch中的聚合分析</h3><p>聚合分析，英文<code>Aggregation</code>，是ES除了搜索功能之外提供的针对ES数据进行统计分析的功能。</p><ul><li>特点：<ul><li>①功能丰富，可满足大部分分析需求；</li><li>②实时性高，所有计算结果实时返回。</li></ul></li><li>基于分析规则的不同，ES将聚合分析主要划分为以下4种：<ol><li><strong><code>Metric</code></strong>: 指标分析类型，如：计算最值，平均值等；</li><li><strong><code>Bucket</code></strong>: 分桶类型，类似于<code>group by</code>语法，根据一定规则划分为若干个桶分类；</li><li><strong><code>Pipeline</code></strong>: 管道分析类型，基于上一级的聚合分析结果进行再分析；</li><li><code>Matrix</code>: 矩阵分析类型。</li></ol></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">// 聚合分析格式：</span><br><span class="line">GET my_index/_search</span><br><span class="line">&#123;</span><br><span class="line"> <span class="attr">"size"</span>:<span class="number">0</span>,</span><br><span class="line"> "aggs":&#123; // 关键词</span><br><span class="line">  "&lt;aggregation_name&gt;":&#123; // 自定义聚合分析名称，一般起的有意义</span><br><span class="line">   "&lt;aggregation_type&gt;":&#123; // 聚合分析类型</span><br><span class="line">    "&lt;aggregation_body&gt;" // 聚合分析主体</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  [,"aggs":&#123;[&lt;svb_aggregation&gt;]+&#125;] // 可包含多个子聚合分析</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-1-Metric聚合分析"><a href="#1-1-Metric聚合分析" class="headerlink" title="1.1 Metric聚合分析"></a>1.1 Metric聚合分析</h4><p>主要分为两类：单值分析（输出单个结果）和多值分析（输出多个结果）。</p><h5 id="1-1-1-单值分析"><a href="#1-1-1-单值分析" class="headerlink" title="1.1.1 单值分析"></a>1.1.1 单值分析</h5><ol><li><code>min</code>：返回数值类型字段的最小值</li><li><code>max</code>：返回数值类型字段的最大值</li><li><code>avg</code>：返回数值类型字段的平均值</li><li><code>sum</code>：返回数值类型字段值的总和</li><li><code>cardinality</code>：返回字段的基数</li><li>使用多个单值分析关键词，返回多个结果</li></ol><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">GET my_index/_search</span><br><span class="line">&#123;</span><br><span class="line"> <span class="attr">"size"</span>: <span class="number">0</span>,</span><br><span class="line"> <span class="attr">"aggs"</span>:&#123;</span><br><span class="line">  <span class="attr">"min_age"</span>:&#123;</span><br><span class="line">   "min":&#123; // 关键字min/max/avg/sum/cardinality</span><br><span class="line">    "field":"age"</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line">//</span><br><span class="line">// 使用多个单值分析关键词，返回多个分析结果</span><br><span class="line">GET my_index/_search</span><br><span class="line">&#123;</span><br><span class="line"> <span class="attr">"size"</span>: <span class="number">0</span>,</span><br><span class="line"> <span class="attr">"aggs"</span>: &#123;</span><br><span class="line">  <span class="attr">"min_age"</span>:&#123;</span><br><span class="line">   "min":&#123;  // 求最小年龄</span><br><span class="line">    "field":"age"</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  "max_age":&#123;</span><br><span class="line">   "max":&#123;  // 求最大年龄</span><br><span class="line">    "field":"age"</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  "avg_age":&#123;</span><br><span class="line">   "avg":&#123;  // 求平均年龄</span><br><span class="line">    "field":"age"</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  "sum_age":&#123;</span><br><span class="line">   "sum":&#123;  // 求年龄总和</span><br><span class="line">    "field":"age"</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="1-1-2-多值分析"><a href="#1-1-2-多值分析" class="headerlink" title="1.1.2 多值分析"></a>1.1.2 多值分析</h5><ol><li><code>stats</code>：返回所有单值结果</li><li><code>extended_stats</code>：对<code>stats</code>进行扩展，包含更多，如：方差，标准差，标准差范围等</li><li><code>Percentile</code>：百分位数统计</li><li><code>Top hits</code>：一般用于分桶之后获取该桶内最匹配的定不稳当列表，即详情数据</li></ol><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">GET my_index/_search</span><br><span class="line">&#123;</span><br><span class="line"> <span class="attr">"size"</span>: <span class="number">0</span>,</span><br><span class="line"> <span class="attr">"aggs"</span>:&#123;</span><br><span class="line">  <span class="attr">"stats_age"</span>:&#123;</span><br><span class="line">   "stats":&#123; // 关键字stats/extended_stats/percentiles</span><br><span class="line">    "field":"age"</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line">//</span><br><span class="line">// 使用percentiles关键词进行百分位数预测。</span><br><span class="line">GET my_index/_search</span><br><span class="line">&#123;</span><br><span class="line"> <span class="attr">"size"</span>: <span class="number">0</span>,</span><br><span class="line"> <span class="attr">"aggs"</span>:&#123;</span><br><span class="line">  <span class="attr">"per_age"</span>:&#123;</span><br><span class="line">   "percentiles":&#123;    // 关键字</span><br><span class="line">    "field":"age",</span><br><span class="line">    "values":[20, 25] // 判断20和25分别在之前的年轻区间的什么位置，以百分数显示</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line">//</span><br><span class="line">// 使用top_hits关键词</span><br><span class="line">GET my_index/_search</span><br><span class="line">&#123;</span><br><span class="line"> <span class="attr">"size"</span>:<span class="number">0</span>,</span><br><span class="line"> <span class="attr">"aggs"</span>:&#123;</span><br><span class="line">  <span class="attr">"jobs"</span>:&#123;</span><br><span class="line">   <span class="attr">"terms"</span>:&#123;</span><br><span class="line">    <span class="attr">"match"</span>:&#123;</span><br><span class="line">     "field":"job.keyword", // 按job.keyword进行分桶聚合</span><br><span class="line">     "size":10</span><br><span class="line">    &#125;,</span><br><span class="line">    "aggs":&#123;</span><br><span class="line">     "top_employee":&#123;</span><br><span class="line">      "top_hits":&#123;</span><br><span class="line">       "size":10,    // 返回文档数量</span><br><span class="line">       "sort":[</span><br><span class="line">        &#123;</span><br><span class="line">         <span class="attr">"age"</span>:&#123;</span><br><span class="line">          <span class="attr">"order"</span>:<span class="string">"desc"</span>  // 按年龄倒叙排列</span><br><span class="line">         &#125;</span><br><span class="line">        &#125;</span><br><span class="line">       ]</span><br><span class="line">      &#125;</span><br><span class="line">     &#125;</span><br><span class="line">    &#125;</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-2-Bucket聚合分析"><a href="#1-2-Bucket聚合分析" class="headerlink" title="1.2 Bucket聚合分析"></a>1.2 Bucket聚合分析</h4><p><code>Bucket</code>，意为桶。即：按照一定规则，将文档分配到不同的桶中，达分类的目的。常见的有以下五类：</p><ol><li><code>Terms</code>: 直接按<code>term</code>进行分桶，如果是<code>text</code>类型，按分词后的结果分桶</li><li><code>Range</code>: 按指定数值范围进行分桶</li><li><code>Date Range</code>: 按指定日期范围进行分桶</li><li><code>Histogram</code>: 直方图，按固定数值间隔策略进行数据分割</li><li><code>Date Histogram</code>: 日期直方图，按固定时间间隔进行数据分割</li></ol><h5 id="1-2-1-Terms"><a href="#1-2-1-Terms" class="headerlink" title="1.2.1 Terms"></a>1.2.1 Terms</h5><p><code>Terms</code>: 直接按<code>term</code>进行分桶，如果是<code>text</code>类型，按分词后的结果分桶</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">// 使用terms关键词</span><br><span class="line">GET my_index/_search</span><br><span class="line">&#123;</span><br><span class="line"> <span class="attr">"size"</span>: <span class="number">0</span>,</span><br><span class="line"> <span class="attr">"aggs"</span>:&#123;</span><br><span class="line">  <span class="attr">"terms_job"</span>:&#123;</span><br><span class="line">   "terms":&#123;    // 关键字</span><br><span class="line">    "field":"job.keyword", // 按job.keyword进行分桶</span><br><span class="line">    "size":5               // 返回五个文档</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="1-2-2-Range"><a href="#1-2-2-Range" class="headerlink" title="1.2.2 Range"></a>1.2.2 Range</h5><p><code>Range</code>: 按指定数值范围进行分桶：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">// 使用range关键词</span><br><span class="line">GET my_index/_search</span><br><span class="line">&#123;</span><br><span class="line"> <span class="attr">"size"</span>: <span class="number">0</span>,</span><br><span class="line"> <span class="attr">"aggs"</span>:&#123;</span><br><span class="line">  <span class="attr">"number_ranges"</span>:&#123;</span><br><span class="line">   "range":&#123;    // 关键字</span><br><span class="line">    "field":"age",    // 按age进行分桶</span><br><span class="line">    "ranges":[</span><br><span class="line">     &#123;</span><br><span class="line">      "key":"&gt;=19 &amp;&amp; &lt; 25",  // 第一个桶：  19&lt;=年龄&lt;25</span><br><span class="line">      "from":19,</span><br><span class="line">      "to":25</span><br><span class="line">     &#125;,</span><br><span class="line">     &#123;</span><br><span class="line">      "key":"&lt; 19",    // 第二个桶：  年龄&lt;19</span><br><span class="line">      "to":19</span><br><span class="line">     &#125;,</span><br><span class="line">     &#123;</span><br><span class="line">      "key":"&gt;= 25",    // 第三个桶：  年龄&gt;=25</span><br><span class="line">      "from":25</span><br><span class="line">     &#125;</span><br><span class="line">    ]</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="1-2-2-Date-Range"><a href="#1-2-2-Date-Range" class="headerlink" title="1.2.2 Date Range"></a>1.2.2 Date Range</h5><p><code>Date Range</code>: 按指定日期范围进行分桶</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">        3）：</span><br><span class="line"></span><br><span class="line">// 使用date_range关键词</span><br><span class="line">GET my_index/_search</span><br><span class="line">&#123;</span><br><span class="line"> <span class="attr">"size"</span>: <span class="number">0</span>,</span><br><span class="line"> <span class="attr">"aggs"</span>:&#123;</span><br><span class="line">  <span class="attr">"date_ranges"</span>:&#123;</span><br><span class="line">   "date_range":&#123;    // 关键字</span><br><span class="line">    "field":"birth",    // 按age进行分桶</span><br><span class="line">    "format":"yyyy",</span><br><span class="line">    "ranges":[</span><br><span class="line">     &#123;</span><br><span class="line">      "key":"&gt;=1980 &amp;&amp; &lt; 1990",  // 第一个桶：  1980&lt;=出生日期&lt;1990</span><br><span class="line">      "from":"1980",</span><br><span class="line">      "to":"1990"</span><br><span class="line">     &#125;,</span><br><span class="line">     &#123;</span><br><span class="line">      "key":"&lt; 1980",    // 第二个桶：  出生日期&lt;1980</span><br><span class="line">      "to":1980</span><br><span class="line">     &#125;,</span><br><span class="line">     &#123;</span><br><span class="line">      "key":"&gt;= 1990",    // 第三个桶：  出生日期&gt;=1990</span><br><span class="line">      "from":1990</span><br><span class="line">     &#125;</span><br><span class="line">    ]</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="1-2-2-Histogram"><a href="#1-2-2-Histogram" class="headerlink" title="1.2.2 Histogram"></a>1.2.2 Histogram</h5><p><code>Histogram</code>: 直方图，按固定数值间隔策略进行数据分割</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">// 使用histogram关键词</span><br><span class="line">GET my_index/_search</span><br><span class="line">&#123;</span><br><span class="line"> <span class="attr">"size"</span>: <span class="number">0</span>,</span><br><span class="line"> <span class="attr">"aggs"</span>:&#123;</span><br><span class="line">  <span class="attr">"age_hist"</span>:&#123;</span><br><span class="line">   "histogram":&#123;     // 关键词</span><br><span class="line">    "field":"age",</span><br><span class="line">    "interval":3,    // 设定间隔大小为2</span><br><span class="line">    "extended_bounds":&#123;    // 设定数据范围</span><br><span class="line">     "min":0,</span><br><span class="line">     "max":30</span><br><span class="line">    &#125;</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="1-2-2-Date-Histogram"><a href="#1-2-2-Date-Histogram" class="headerlink" title="1.2.2 Date Histogram"></a>1.2.2 Date Histogram</h5><p><code>Date Histogram</code>: 日期直方图，按固定时间间隔进行数据分割</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">// 使用date_histogram关键词</span><br><span class="line">GET my_index/_search</span><br><span class="line">&#123;</span><br><span class="line"> <span class="attr">"size"</span>: <span class="number">0</span>,</span><br><span class="line"> <span class="attr">"aggs"</span>:&#123;</span><br><span class="line">  <span class="attr">"birth_hist"</span>:&#123;</span><br><span class="line">   "date_histogram":&#123;     // 关键词</span><br><span class="line">    "field":"birth",</span><br><span class="line">    "interval":"year",    // 设定间隔大小为年year</span><br><span class="line">    "format":"yyyy",</span><br><span class="line">    "extended_bounds":&#123;    // 设定数据范围</span><br><span class="line">     "min":"1980",</span><br><span class="line">     "max":"1990"</span><br><span class="line">    &#125;</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-3-Bucket-Metric聚合分析"><a href="#1-3-Bucket-Metric聚合分析" class="headerlink" title="1.3 Bucket+Metric聚合分析"></a>1.3 Bucket+Metric聚合分析</h4><p>Bucket聚合分析允许通过添加子分析来进一步进行分析，该子分析可以是Bucket，也可以是Metric。</p><ol><li>分桶之后再分桶（Bucket+Bucket），在数据可视化中一般使用千层饼图进行显示。</li><li>分桶之后再数据分析（Bucket+Metric）</li></ol><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">// 分桶之后再分桶——Bucket+Bucket</span><br><span class="line">GET my_index/_search</span><br><span class="line">&#123;</span><br><span class="line"> <span class="attr">"size"</span>:<span class="number">0</span>,</span><br><span class="line"> <span class="attr">"aggs"</span>:&#123;</span><br><span class="line">  <span class="attr">"jobs"</span>:&#123;</span><br><span class="line">   "terms":&#123;             // 第一层Bucket</span><br><span class="line">    "match":&#123;</span><br><span class="line">     "field":"job.keyword",</span><br><span class="line">     "size":10</span><br><span class="line">    &#125;,</span><br><span class="line">    "aggs":&#123;</span><br><span class="line">     "age_range":&#123;</span><br><span class="line">      "range":&#123;             // 第二层Bucket</span><br><span class="line">       "field":"age",</span><br><span class="line">       "ranges":[</span><br><span class="line">        &#123;"to":20&#125;,</span><br><span class="line">        &#123;"from":20,"to":30&#125;,</span><br><span class="line">        &#123;<span class="attr">"from"</span>:<span class="number">30</span>&#125;</span><br><span class="line">       ]</span><br><span class="line">      &#125;</span><br><span class="line">     &#125;</span><br><span class="line">    &#125;</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">// 分桶之后再数据分析——Bucket+Metric</span><br><span class="line">GET my_index/_search</span><br><span class="line">&#123;</span><br><span class="line"> <span class="attr">"size"</span>:<span class="number">0</span>,</span><br><span class="line"> <span class="attr">"aggs"</span>:&#123;</span><br><span class="line">  <span class="attr">"jobs"</span>:&#123;</span><br><span class="line">   "terms":&#123;             // 第一层Bucket</span><br><span class="line">    "match":&#123;</span><br><span class="line">     "field":"job.keyword",</span><br><span class="line">     "size":10</span><br><span class="line">    &#125;,</span><br><span class="line">    "aggs":&#123;</span><br><span class="line">     "stats_age":&#123;</span><br><span class="line">      "stats":&#123;            // 第二层Metric</span><br><span class="line">       "field":"age"</span><br><span class="line">      &#125;</span><br><span class="line">     &#125;</span><br><span class="line">    &#125;</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-4-Pipeline聚合分析"><a href="#1-4-Pipeline聚合分析" class="headerlink" title="1.4 Pipeline聚合分析"></a>1.4 Pipeline聚合分析</h4><p>针对聚合分析的结果进行再分析，且支持链式调用：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">// 使用pipeline聚合分析,计算订单月平均销售额。</span><br><span class="line">GET my_index/_search</span><br><span class="line">&#123;</span><br><span class="line"> <span class="attr">"size"</span>: <span class="number">0</span>,</span><br><span class="line"> <span class="attr">"aggs"</span>:&#123;</span><br><span class="line">  <span class="attr">"sales_per_month"</span>:&#123;</span><br><span class="line">   <span class="attr">"date_histogram"</span>:&#123;</span><br><span class="line">    <span class="attr">"field"</span>:<span class="string">"date"</span>,</span><br><span class="line">    <span class="attr">"interval"</span>:<span class="string">"month"</span></span><br><span class="line">   &#125;,</span><br><span class="line">   <span class="attr">"aggs"</span>:&#123;</span><br><span class="line">    <span class="attr">"sales"</span>:&#123;</span><br><span class="line">     <span class="attr">"sum"</span>:&#123;</span><br><span class="line">      <span class="attr">"field"</span>:<span class="string">"price"</span></span><br><span class="line">     &#125;</span><br><span class="line">    &#125;</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"avg_monthly_sales"</span>:&#123;</span><br><span class="line">   "avg_bucket":&#123;    // bucket类型</span><br><span class="line">    "buckets_path":"sales_per_month&gt;sales"    // 使用buckets_path参数，表明是pipeline</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>pipeline</code>的分析结果会输出到原结果中，由输出位置不同，分为两类：<code>Parent</code>和<code>Sibling</code>。</p><ol><li><code>Sibling</code>。结果与现有聚合分析结果同级，如：Max/Min/Sum/Avg Bucket、Stats/Extended Stats Bucket、Percentiles Bucket</li><li><code>Parent</code>。结果内嵌到现有聚合分析结果中，如：Derivate、Moving Average、Cumulative Sum</li></ol><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">// Sibling聚合分析(min_bucket)</span><br><span class="line">GET my_index/_search</span><br><span class="line">&#123;</span><br><span class="line"> <span class="attr">"size"</span>: <span class="number">0</span>,</span><br><span class="line"> <span class="attr">"aggs"</span>:&#123;</span><br><span class="line">  <span class="attr">"jobs"</span>:&#123;</span><br><span class="line">   "terms":&#123;    // 根据job.keyword进行分桶</span><br><span class="line">    "field":"job.keyword",</span><br><span class="line">    "size":10</span><br><span class="line">   &#125;,</span><br><span class="line">   "aggs":&#123;</span><br><span class="line">    "avg_salary":&#123;</span><br><span class="line">     "avg":&#123;    // 之后Metric中求工资的平均数</span><br><span class="line">      "field":"salary"</span><br><span class="line">     &#125;</span><br><span class="line">    &#125;</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  "min_salary_by_job":&#123;</span><br><span class="line">   "min_bucket":&#123;    // 关键词</span><br><span class="line">    "buckets_path":"jobs&gt;avg_salary"    // 按工资平均数，排列每个桶中的job</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">// Parent聚合分析(Derivate)</span><br><span class="line">GET my_index/_search</span><br><span class="line">&#123;</span><br><span class="line"> <span class="attr">"size"</span>:<span class="number">0</span>,</span><br><span class="line"> <span class="attr">"aggs"</span>:&#123;</span><br><span class="line">  <span class="attr">"bitrh"</span>:&#123;</span><br><span class="line">   <span class="attr">"date_histogram"</span>:&#123;</span><br><span class="line">    <span class="attr">"field"</span>:<span class="string">"birth"</span>,</span><br><span class="line">    <span class="attr">"interval"</span>:<span class="string">"year"</span>,</span><br><span class="line">    <span class="attr">"min_doc_count"</span>:<span class="number">0</span></span><br><span class="line">   &#125;,</span><br><span class="line">   <span class="attr">"aggs"</span>:&#123;</span><br><span class="line">    <span class="attr">"avg_salary"</span>:&#123;</span><br><span class="line">     <span class="attr">"avg"</span>:&#123;</span><br><span class="line">      <span class="attr">"field"</span>:<span class="string">"salary"</span></span><br><span class="line">     &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"derivative_avg_salary"</span>:&#123;</span><br><span class="line">     "derivative":&#123;    // 关键词</span><br><span class="line">      "buckets_path":"avg_salary"</span><br><span class="line">     &#125;</span><br><span class="line">    &#125;</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-5-聚合分析的作用范围"><a href="#1-5-聚合分析的作用范围" class="headerlink" title="1.5 聚合分析的作用范围"></a>1.5 聚合分析的作用范围</h4><p>ES聚合分析默认作用范围是<code>query的结果集</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">// ES中聚合分析的默认作用范围是query的结果集</span><br><span class="line">GET my_index/_search</span><br><span class="line">&#123;</span><br><span class="line"> <span class="attr">"size"</span>:<span class="number">0</span>,</span><br><span class="line"> <span class="attr">"query"</span>:&#123;</span><br><span class="line">  <span class="attr">"match"</span>:&#123;</span><br><span class="line">   <span class="attr">"username"</span>:<span class="string">"alfred"</span></span><br><span class="line">  &#125;</span><br><span class="line"> &#125;,</span><br><span class="line"> <span class="attr">"aggs"</span>:&#123;</span><br><span class="line">  <span class="attr">"jobs"</span>:&#123;</span><br><span class="line">   <span class="attr">"terms"</span>:&#123;</span><br><span class="line">    "match":&#123;    // 此时，只在username字段中包含alfred的文档中进行分桶</span><br><span class="line">     "field":"job.keyword",</span><br><span class="line">     "size":10</span><br><span class="line">    &#125;</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可通过以下方式修改：<code>filter</code>、<code>post_filter</code>、<code>global</code></p><ol><li>filter: 为某个结合分析设定过滤条件，从而在不改变整体query语句的情况下修改范围</li><li>post_filter，作用于文档过滤，但在聚合分析之后才生效</li><li>global，无视query条件，基于所有文档进行分析</li></ol><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">// 使用filter进行过滤</span><br><span class="line">GET my_index/_search</span><br><span class="line">&#123;</span><br><span class="line"> <span class="attr">"size"</span>:<span class="number">0</span>,</span><br><span class="line"> <span class="attr">"aggs"</span>:&#123;</span><br><span class="line">  <span class="attr">"jobs_salary_small"</span>:&#123;</span><br><span class="line">   <span class="attr">"filter"</span>:&#123;</span><br><span class="line">    <span class="attr">"range"</span>:&#123;</span><br><span class="line">     <span class="attr">"salary"</span>:&#123;</span><br><span class="line">      <span class="attr">"to"</span>:<span class="number">10000</span></span><br><span class="line">     &#125;</span><br><span class="line">    &#125;</span><br><span class="line">   &#125;,</span><br><span class="line">   <span class="attr">"aggs"</span>:&#123;</span><br><span class="line">    <span class="attr">"jobs"</span>:&#123;</span><br><span class="line">     "terms":&#123;    // 在salary小于10000的文档中对工作进行分桶</span><br><span class="line">      "field":"job.keyword"</span><br><span class="line">     &#125;</span><br><span class="line">    &#125;</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">// 使用post_filter进行过滤</span><br><span class="line">GET my_index/_search</span><br><span class="line">&#123;</span><br><span class="line"> <span class="attr">"size"</span>:<span class="number">0</span>,</span><br><span class="line"> <span class="attr">"aggs"</span>:&#123;</span><br><span class="line">  <span class="attr">"jobs"</span>:&#123;</span><br><span class="line">   "terms":&#123;    // 在salary小于10000的文档中对工作进行分桶</span><br><span class="line">    "field":"job.keyword"</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;,</span><br><span class="line"> "post_filter":&#123;    // 在集合分析之后才生效</span><br><span class="line">  "match":&#123;</span><br><span class="line">   "job.keyword":"java engineer"</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">// 使用global进行过滤</span><br><span class="line">GET my_index/_search</span><br><span class="line">&#123;</span><br><span class="line"> <span class="attr">"query"</span>:&#123;</span><br><span class="line">  <span class="attr">"match"</span>:&#123;</span><br><span class="line">   <span class="attr">"job.keyword"</span>:<span class="string">"java engineer"</span></span><br><span class="line">  &#125;</span><br><span class="line"> &#125;,</span><br><span class="line"> <span class="attr">"aggs"</span>:&#123;</span><br><span class="line">  <span class="attr">"java_avg_salary"</span>:&#123;</span><br><span class="line">   <span class="attr">"avg"</span>:&#123;</span><br><span class="line">    <span class="attr">"field"</span>:<span class="string">"salary"</span></span><br><span class="line">   &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"all"</span>:&#123;</span><br><span class="line">   "global":&#123;    // 关键词</span><br><span class="line">    "aggs":&#123;</span><br><span class="line">     "avg_salary":&#123;</span><br><span class="line">      "avg":&#123;</span><br><span class="line">       "field":"salary"    // 依然是对所有的文档进行查询，而不会去管query</span><br><span class="line">      &#125;</span><br><span class="line">     &#125;</span><br><span class="line">    &#125;</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-6-聚合分析中的排序"><a href="#1-6-聚合分析中的排序" class="headerlink" title="1.6 聚合分析中的排序"></a>1.6 聚合分析中的排序</h4><ol><li>可使用自带的关键数据排序，如：<code>_count</code>文档数、<code>_key</code>按key值</li><li>也可使用聚合结果进行排序</li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">// 使用自带的数据进行排序</span><br><span class="line">GET my_index/_search</span><br><span class="line">&#123;</span><br><span class="line"> <span class="attr">"size"</span>:<span class="number">0</span>,</span><br><span class="line"> <span class="attr">"aggs"</span>:&#123;</span><br><span class="line">  <span class="attr">"jobs"</span>:&#123;</span><br><span class="line">   <span class="attr">"terms"</span>:&#123;</span><br><span class="line">    <span class="attr">"field"</span>:<span class="string">"job.keyword"</span>,</span><br><span class="line">    <span class="attr">"size"</span>:<span class="number">10</span>,</span><br><span class="line">    <span class="attr">"order"</span>:[</span><br><span class="line">    &#123;</span><br><span class="line">     <span class="attr">"_count"</span>:<span class="string">"asc"</span>    // 默认按_count倒叙排列</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">     <span class="attr">"_key"</span>:<span class="string">"desc"</span>    使用多个排序值，从上往下的顺序进行排列</span><br><span class="line">    &#125;</span><br><span class="line">    ]</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">// 使用聚合结果进行排序</span><br><span class="line">GET my_index/_search</span><br><span class="line">&#123;</span><br><span class="line"> <span class="attr">"size"</span>:<span class="number">0</span>,</span><br><span class="line"> <span class="attr">"aggs"</span>:&#123;</span><br><span class="line">  <span class="attr">"salary_hist"</span>:&#123;</span><br><span class="line">   <span class="attr">"histogram"</span>:&#123;</span><br><span class="line">   &#125;,</span><br><span class="line">   <span class="attr">"aggs"</span>:&#123;</span><br><span class="line">    <span class="attr">"age"</span>:&#123;</span><br><span class="line">     <span class="attr">"filter"</span>:&#123;</span><br><span class="line">      <span class="attr">"range"</span>:&#123;</span><br><span class="line">       <span class="attr">"age"</span>:&#123;</span><br><span class="line">        <span class="attr">"gte"</span>:<span class="number">10</span></span><br><span class="line">       &#125;</span><br><span class="line">      &#125;</span><br><span class="line">     &#125;,</span><br><span class="line">     <span class="attr">"aggs"</span>:&#123;</span><br><span class="line">      <span class="attr">"avg_age"</span>:&#123;</span><br><span class="line">       <span class="attr">"field"</span>:<span class="string">"age"</span></span><br><span class="line">      &#125;</span><br><span class="line">     &#125;</span><br><span class="line">    &#125;</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-7-计算精准度问题"><a href="#1-7-计算精准度问题" class="headerlink" title="1.7 计算精准度问题"></a>1.7 计算精准度问题</h4><p>ES聚合的执行流程：每个<code>Shard</code>上分别计算，由<code>coordinating Node</code>做聚合。</p><ul><li><code>Terms</code>计算不准确原因：数据分散在多个<code>Shard</code>上，<code>coordinating Node</code>无法得悉数据全貌，那么在取数据的时候，造成精准度不准确。</li><li>如下图：正确结果应该为<code>a,b,c</code>,而返回的是a,b,d</li></ul><p><img src="http://cdn.chaooo.top/Java/elastic-hits.jpg" alt></p><ul><li><p>解决办法有两种：</p><ol><li>直接设置<code>shard</code>数量为1；消除数据分散问题，但无法承载大数据量。</li><li>设置<code>shard_size</code>大小，即每次从<code>shard</code>上额外多获取数据，从而提升精准度</li></ol></li><li><p>terms聚合返回结果中有两个统计值：</p><ol><li><code>doc_count_error_upper_bound</code>：被遗漏的term可能的最大值；</li><li><code>sum_other_doc_count</code>：返回结果bucket的term外其他term的文档总数。</li></ol></li><li><p>设定<code>show_term_doc_count_error</code>可以查看每个bucket误算的最大值(<code>doc_count_error_upper_bound</code>,为<code>0</code>表示计算准确)</p></li><li><p>Shard_Size默认大小：<code>(size*1.5)+10</code></p><ul><li>通过调整Shard_Size的大小降低<code>doc_count_error_upper_bound</code>来提升准确度</li><li>增大了整体的计算量，从而降低了响应时间</li></ul></li><li><p>权衡 <strong><code>海量数据</code>、<code>精准度</code>、<code>实时性</code></strong> 三者只能取其二。</p></li><li><p>Elasticsearch目前支持两种近似算法：cardinality(度量) 和 percentiles(百分位数度量)</p><ul><li>结果近似准确，但不一定精准</li><li>可通过参数的调整使其结果精准，但同时消耗更多时间和性能</li></ul></li></ul><h3 id="2-ElasticSearch的数据建模"><a href="#2-ElasticSearch的数据建模" class="headerlink" title="2. ElasticSearch的数据建模"></a>2. ElasticSearch的数据建模</h3><p>数据建模(Data Modeling)大致分为三个阶段：概念建模、逻辑建模、物理建模</p><ol><li>概念模型：时间占比<code>10%</code><ul><li>基础。确定系统的核心需求和范围边界，实际实体与实体之间的关系。</li></ul></li><li>逻辑模型：时间占比<code>60-70%</code><ul><li>核心。确定系统的核心需求和范围边界，实际实体与实体之间的关系。</li></ul></li><li>物理模型：时间占比<code>20-30%</code><ul><li>落地实现。结合具体的数据库产品，在满足业务读写性能等需求的前提下确定最终的定义。</li></ul></li></ol><h4 id="2-1-ES中的数据建模"><a href="#2-1-ES中的数据建模" class="headerlink" title="2.1 ES中的数据建模"></a>2.1 ES中的数据建模</h4><p>ES是基于Luence以倒排索引为基础实现的存储体系，不遵循关系型数据库中的范式约定。<br><img src="http://cdn.chaooo.top/Java/elastic-md.jpg" alt></p><h4 id="2-2-Mapping字段相关设置"><a href="#2-2-Mapping字段相关设置" class="headerlink" title="2.2 Mapping字段相关设置"></a>2.2 Mapping字段相关设置</h4><ol><li><strong><code>enabled</code></strong>:<code>true/false</code>。<code>false</code>表示 仅存储，不做搜索或聚合分析。</li><li>**<code>index</code>:<code>true/false</code>。是否构建倒排索引。不需进行字段的检索的时候设为false。</li><li><strong><code>index_options</code></strong>:<code>docs/freqs/positions/offsets</code>。确定存储倒排索引的哪些信息。</li><li><strong><code>norms</code></strong>:<code>true/false</code>。是否存储归一化相关系数，若字段仅用于过滤和聚合分析，则可关闭。</li><li><strong><code>doc_values</code></strong>:<code>true/false</code>。是否启用doc_values，用于排序和聚类分析。默认开启。</li><li><strong><code>field_data</code></strong>:<code>true/false</code>。是否设text类型为fielddata，实现排序和聚合分析。默认关闭。</li><li><strong><code>store</code></strong>:<code>true/false</code>。是否存储该字段。</li><li><strong><code>coerce</code></strong>:<code>true/false</code>。 是否开启数值类型转换功能，如：字符串转数字等。</li><li><strong><code>multifields</code></strong>:<code>多字段</code>。灵活使用多字段特性来解决多样业务需求。</li><li><strong><code>dynamic</code></strong>:<code>true/false/strict</code>。控制mapping自动更新。</li><li><strong><code>date_detection</code></strong>:<code>true/false</code>。是否启用自定识别日期类型，一般设为false，避免不必要的识别字符串中的日期。</li></ol><h4 id="2-3-Mapping字段属性设定流程"><a href="#2-3-Mapping字段属性设定流程" class="headerlink" title="2.3 Mapping字段属性设定流程"></a>2.3 Mapping字段属性设定流程</h4><p><code>判断类型</code>—&gt;<code>是否需要检索</code>—&gt;<code>是否需要排序和聚合分析</code>—&gt;<code>是否需要另行存储</code></p><ol><li>判断类型<ul><li>字符串类型：需要分词，则设为text，否则设为keyword。</li><li>枚举类型：基于性能考虑，设为keyword，即便该数据为整型。</li><li>数值类型：尽量选择贴近的类型，如byte即可表示所有数值时，即用byte，而不是所有都用long。</li><li>其他类型：布尔型，日期类型，地理位置类型等。</li></ul></li><li>是否需要检索<ul><li>完全不需要检索、排序、聚合分析的字段<code>enabled设为false</code>。</li><li>不需检索的字段<code>index设为false</code>。</li><li>需检索的字段，可通过如下配置设定需要的存储粒度:<ul><li><code>index_options</code> 结合需要设定。</li><li><code>norms</code> 不需归一化数据时可关闭。</li></ul></li></ul></li><li>是否需要排序和聚合分析<ul><li>当不需要排序和聚合分析功能时：<ul><li><code>doc_values设为false</code>。</li><li><code>field_data设为false</code>。</li></ul></li></ul></li><li>是否需要另行存储<ul><li><code>store设为true</code>即可存储该字段的原始内容(且与<code>_source</code>无关)，一般结合<code>_source</code>的<code>enabled设为false</code>时使用。</li></ul></li></ol><h4 id="2-4-ES建模实例"><a href="#2-4-ES建模实例" class="headerlink" title="2.4 ES建模实例"></a>2.4 ES建模实例</h4><ul><li>针对博客文章设定索引blog_index，包含字段：<ul><li>标题：title</li><li>发布日期：publish_data</li><li>作者：author</li><li>摘要：abstract</li><li>网址：url</li></ul></li><li><strong>简易的数据模型</strong>：</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">// 简易模型blog_index</span><br><span class="line">PUT blog_index</span><br><span class="line">&#123;</span><br><span class="line"> <span class="attr">"mappings"</span>:&#123;</span><br><span class="line">  <span class="attr">"doc"</span>:&#123;</span><br><span class="line">    <span class="attr">"properties"</span>:&#123;</span><br><span class="line">      <span class="attr">"title"</span>:&#123;</span><br><span class="line">          //title设为text，包含自字段keyword。支持检索、排序、聚合分析</span><br><span class="line">          "type":"text",</span><br><span class="line">          "fields":&#123;</span><br><span class="line">            "keyword":&#123;"type":"keyword"&#125;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;,//publish_data设为date，支持检索、排序、聚合分析</span><br><span class="line">      "publish_data":&#123;"type":"date"&#125;,</span><br><span class="line">      // author设为keyword，支持检索、排序、聚合分析</span><br><span class="line">      "author":&#123;"type":"keyword"&#125;,</span><br><span class="line">      // abstract设为text，支持检索、排序、聚合分析</span><br><span class="line">      "abstract":&#123;"type":"text"&#125;,</span><br><span class="line">      // url设为date，不需进行检索</span><br><span class="line">      "url":&#123;"enabled":false&#125;</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>如果在<code>blog_index</code>中加入一个内容字段<code>content</code></strong></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">// 为blog_index增加content字段</span><br><span class="line">PUT blog_index</span><br><span class="line">&#123;</span><br><span class="line"> <span class="attr">"mappings"</span>:&#123;</span><br><span class="line">    <span class="attr">"doc"</span>:&#123;</span><br><span class="line">     //关闭，不存原始内容到_source</span><br><span class="line">     "_source":&#123;"enabled":false&#125;,</span><br><span class="line">     "properties":&#123;</span><br><span class="line">        //title设为text，包含自字段keyword。支持检索、排序、聚合分析</span><br><span class="line">        "title":&#123;</span><br><span class="line">            "type":"text",</span><br><span class="line">            "fields":&#123;</span><br><span class="line">              "keyword":&#123;</span><br><span class="line">               "type":"keyword"</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            "store":true //对数据进行存储</span><br><span class="line">        &#125;,//publish_data设为date，支持检索、排序、聚合分析</span><br><span class="line">        "publish_data":&#123;</span><br><span class="line">            "type":"date",</span><br><span class="line">            "store":true // 对数据进行存储</span><br><span class="line">        &#125;,</span><br><span class="line">        "author":&#123;// author设为keyword，支持检索、排序、聚合分析</span><br><span class="line">            "type":"keyword",</span><br><span class="line">            "store":true    // 对数据进行存储</span><br><span class="line">        &#125;,</span><br><span class="line">        "abstract":&#123;// abstract设为text，支持检索、排序、聚合分析</span><br><span class="line">            "type":"text",</span><br><span class="line">            "store":true    // 对数据进行存储</span><br><span class="line">        &#125;,</span><br><span class="line">        "content":&#123;// content设为text，支持检索、排序、聚合分析</span><br><span class="line">            "type":"text",</span><br><span class="line">            "store":true    // 对数据进行存储</span><br><span class="line">        &#125;,</span><br><span class="line">        "url":&#123;</span><br><span class="line">            "type":"keyword",   // url设为keyword</span><br><span class="line">            "doc_values":false, // url不支持排序和聚合分析</span><br><span class="line">            "norms":false,      // url也不需要归一化数据</span><br><span class="line">            "ignore_above":100, // 预设内容长度为100</span><br><span class="line">            "store":true        // 对数据进行存储</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>在搜索时增加高亮</strong>: 在此时，<code>content</code>里面的数据会存储大量的内容数据，数据量可能达到上千、上万，甚至几十万。那么在搜索的时候，根据<code>search</code>机制，如果还是像之前一样进行<code>_search</code>搜索，并只显示其他字段的话，其实依然还是每次获取了<code>content</code>字段的内容，影响性能，所以，使用<code>stored_fields</code>参数，控制返回的字段。节省了大量资源：</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">// 使用stored_fields返回指定的存储后的字段</span><br><span class="line">GET blog_index/_search</span><br><span class="line">&#123;</span><br><span class="line"> <span class="attr">"stored_fields"</span>:[<span class="string">"title"</span>,<span class="string">"publish_data"</span>,<span class="string">"author"</span>,<span class="string">"Abstract"</span>,<span class="string">"url"</span>],</span><br><span class="line"> <span class="attr">"query"</span>:&#123;</span><br><span class="line">  <span class="attr">"match"</span>:&#123;</span><br><span class="line">   <span class="attr">"content"</span>:<span class="string">"world"</span>//依然进行content搜索，但是不返回所有的content字段</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;,</span><br><span class="line"> "highlight":&#123; //针对content字段进行高亮显示</span><br><span class="line">  "fields":&#123;</span><br><span class="line">     "content":&#123;&#125;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意：<code>GET blog_index/_search?_source=title</code> 虽然只显示了<code>title</code>，但是<code>search</code>机制决定了，会把所有<code>_source</code>内容获取到，但只是显示<code>title</code>。</p></blockquote><h4 id="2-5-ES中关联关系处理"><a href="#2-5-ES中关联关系处理" class="headerlink" title="2.5 ES中关联关系处理"></a>2.5 ES中关联关系处理</h4><p><code>ES</code>不擅长处理关系型数据库中的关联关系，因为底层使用的倒排索引，如：文章表<code>blog</code>和评论表<code>comment</code>之间通过<code>blog_id</code>关联。<br>目前ES主要有以下4种常用的方法来处理关联关系：</p><ol><li><strong><code>Nested Object</code></strong>:嵌套文档</li><li><strong><code>Parent/Child</code></strong>:父子文档</li><li><code>Data denormalization</code>:数据的非规范化</li><li><code>Application-side joins</code>:服务端Join或客户端Join</li></ol><h5 id="2-5-1-Application-side-joins（服务端Join或客户端Join）"><a href="#2-5-1-Application-side-joins（服务端Join或客户端Join）" class="headerlink" title="2.5.1 Application-side joins（服务端Join或客户端Join）"></a>2.5.1 Application-side joins（服务端Join或客户端Join）</h5><p>索引之间完全独立（利于对数据进行标准化处理，如便于上述两种增量同步的实现），由应用端的多次查询来实现近似关联关系查询。</p><ul><li>适用于第一个实体只有少量的文档记录的情况（使用<code>ES</code>的<code>terms</code>查询具有上限，默认<code>1024</code>，具体可在<code>elasticsearch.yml</code>中修改），并且最好它们很少改变。这将允许应用程序对结果进行缓存，并避免经常运行第一次查询。</li></ul><h5 id="2-5-2-Data-denormalization（数据的非规范化）"><a href="#2-5-2-Data-denormalization（数据的非规范化）" class="headerlink" title="2.5.2 Data denormalization（数据的非规范化）"></a>2.5.2 Data denormalization（数据的非规范化）</h5><p>通俗点就是通过字段冗余，以一张大宽表来实现粗粒度的<code>index</code>，这样可以充分发挥扁平化的优势。但是这是以牺牲索引性能及灵活度为代价的。</p><ul><li>使用的前提：冗余的字段应该是很少改变的；比较适合与一对少量关系的处理。当业务数据库并非采用非规范化设计时，这时要将数据同步到作为二级索引库的ES中，就很难使用上述增量同步方案，必须进行定制化开发，基于特定业务进行应用开发来处理<code>join</code>关联和实体拼接。</li></ul><blockquote><p>宽表处理在处理一对多、多对多关系时，会有字段冗余问题，适合“一对少量”且这个“一”更新不频繁的应用场景。</p></blockquote><h5 id="2-5-3-Nested-objects（嵌套文档）"><a href="#2-5-3-Nested-objects（嵌套文档）" class="headerlink" title="2.5.3 Nested objects（嵌套文档）"></a>2.5.3 Nested objects（嵌套文档）</h5><p>索引性能和查询性能二者不可兼得，必须进行取舍。<br>嵌套文档将实体关系嵌套组合在单文档内部（类似与json的一对多层级结构），这种方式牺牲索引性能（文档内任一属性变化都需要重新索引该文档）来换取查询性能，可以同时返回关系实体，比较适合于一对少量的关系处理。</p><ul><li>当使用嵌套文档时，使用通用的查询方式是无法访问到的，必须使用合适的查询方式（nested query、nested filter、nested facet等），很多场景下，使用嵌套文档的复杂度在于索引阶段对关联关系的组织拼装。</li></ul><h5 id="2-5-4-Parent-Child（父子文档）"><a href="#2-5-4-Parent-Child（父子文档）" class="headerlink" title="2.5.4 Parent/Child（父子文档）"></a>2.5.4 Parent/Child（父子文档）</h5><p>父子文档牺牲了一定的查询性能来换取索引性能，适用于一对多的关系处理。其通过两种type的文档来表示父子实体，父子文档的索引是独立的。父-子文档ID映射存储在 Doc Values 中。当映射完全在内存中时， Doc Values 提供对映射的快速处理能力，另一方面当映射非常大时，可以通过溢出到磁盘提供足够的扩展能力。</p><ul><li>在查询parent-child替代方案时，发现了一种filter-terms的语法，要求某一字段里有关联实体的ID列表。基本的原理是在terms的时候，对于多项取值，如果在另外的index或者type里已知主键id的情况下，某一字段有这些值，可以直接嵌套查询。具体可参考官方文档的示例：通过用户里的粉丝关系，微博和用户的关系，来查询某个用户的粉丝发表的微博列表。</li></ul><blockquote><p>父子文档相比嵌套文档较灵活，但只适用于“一对大量”且这个“一”不是海量的应用场景，该方式比较耗内存和CPU，这种方式查询比嵌套方式慢5~10倍，且需要使用特定的has_parent和has_child过滤器查询语法，查询结果不能同时返回父子文档（一次join查询只能返回一种类型的文档）。</p></blockquote><ul><li>而受限于父子文档必须在同一分片上，ES父子文档在滚动索引、多索引场景下对父子关系存储和联合查询支持得不好，而且子文档type删除比较麻烦（子文档删除必须提供父文档ID）。</li><li>如果业务端对查询性能要求很高的话，还是建议使用宽表化处理的方式，这样也可以比较好地应对聚合的需求。在索引阶段需要做join处理，查询阶段可能需要做去重处理，分页方式可能也得权衡考虑下。</li></ul><h4 id="2-6-ES中的reindex"><a href="#2-6-ES中的reindex" class="headerlink" title="2.6 ES中的reindex"></a>2.6 ES中的reindex</h4><p><code>reindex</code>：指重建所有数据的过程，一般发生在一下情况：</p><ol><li><code>mapping</code>设置变更，如：字段类型变化，分词器字典更新等；</li><li><code>index</code>设置变更，如：分片数变化；</li><li>迁移数据。</li></ol><ul><li>ES提供了线程的api用于完成数据重建：<ul><li><code>_update_by_query</code>：在现有索引上重建；</li><li><code>_reindex</code>：在其他索引上重建。</li></ul></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 将blog_index中所有文档重建一遍：</span><br><span class="line">// 如果遇到版本冲突，依然执行。</span><br><span class="line">POST blog_index/_update_by_query?conflicts=proceed</span><br><span class="line">// 此时如果blog_index中没有store的数据，则会报错</span><br></pre></td></tr></table></figure><h5 id="2-6-1-使用-update-by-query，更新文档的字段值和部分文档"><a href="#2-6-1-使用-update-by-query，更新文档的字段值和部分文档" class="headerlink" title="2.6.1 使用_update_by_query，更新文档的字段值和部分文档"></a>2.6.1 使用<code>_update_by_query</code>，更新文档的字段值和部分文档</h5><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">// 更新文档的字段值及部分文档</span><br><span class="line">POST blog_index/_update_by_query</span><br><span class="line">&#123;</span><br><span class="line"> "script":&#123;    // 更新文档的字段值</span><br><span class="line">  "source":"ctx._source.likes++",    // 代码</span><br><span class="line">  "lang":"painless"    // ES自带script语法</span><br><span class="line"> &#125;,</span><br><span class="line"> "query":&#123;    // 更新部分文档</span><br><span class="line">  "term":&#123;</span><br><span class="line">   "user":"tom"</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在reindex发起后进入的文档，不会参与重建，类似于快照的机制。因此：一般在文档不再发生变更时，进行文档的reindex。</p><h5 id="2-6-2-使用-reindex，重建数据"><a href="#2-6-2-使用-reindex，重建数据" class="headerlink" title="2.6.2 使用_reindex，重建数据"></a>2.6.2 使用<code>_reindex</code>，重建数据</h5><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">// 使用_reindex：</span><br><span class="line">POST _reindex</span><br><span class="line">&#123;</span><br><span class="line"> "source":&#123;    // 被重建索引</span><br><span class="line">  "index":"blog_index"</span><br><span class="line"> &#125;,</span><br><span class="line"> "dest":&#123;    // 目标索引</span><br><span class="line">  "index":"blog_new_index"</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>数据重建时间，受到索引文档规模的影响，此时设定<code>url</code>参数<code>wait_for_completion</code>为<code>false</code>，来异步执行。</li><li><code>ES</code>通过<code>task</code>来描述此类执行任务，并提供了<code>task api</code>来查看任务的执行进度和相关数据：</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 使用task api</span><br><span class="line">POST blog_index/_update_by_query?comflicts=proceed&amp;wait_for_completion=false</span><br><span class="line">// 使用返回的taskid，查看任务的执行进度和相关数据</span><br><span class="line">GET _tasks/&lt;返回的task id&gt;</span><br></pre></td></tr></table></figure><h4 id="2-7-其他建议"><a href="#2-7-其他建议" class="headerlink" title="2.7 其他建议"></a>2.7 其他建议</h4><ol><li>对mapping进行版本管理：<ul><li>要么写文件/注释，加入到<code>Git</code>仓库，一眼可见；</li><li>要么增加<code>metadata</code>字段，维护版本，并在每次更新<code>mapping</code>设置的时候加<code>1</code>。</li></ul></li></ol><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">"metadata":&#123;</span><br><span class="line"> "version":1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>防止字段过多：<ul><li><code>index.mapping.total_fields_limit</code>，默认<code>1000</code>个。一般是因为没有高质量的数据建模导致，如：<code>dynamic</code>设为<code>true</code>。此时考虑查分多个索引来解决问题。</li></ul></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-ElasticSearch中的聚合分析&quot;&gt;&lt;a href=&quot;#1-ElasticSearch中的聚合分析&quot; class=&quot;headerlink&quot; title=&quot;1. ElasticSearch中的聚合分析&quot;&gt;&lt;/a&gt;1. ElasticSearch中的聚合分析
      
    
    </summary>
    
      <category term="ElasticStack" scheme="https://wangyitao.github.io/categories/ElasticStack/"/>
    
    
      <category term="ElasticSearch" scheme="https://wangyitao.github.io/tags/ElasticSearch/"/>
    
      <category term="Kibana" scheme="https://wangyitao.github.io/tags/Kibana/"/>
    
      <category term="ElasticStack" scheme="https://wangyitao.github.io/tags/ElasticStack/"/>
    
      <category term="LogStash" scheme="https://wangyitao.github.io/tags/LogStash/"/>
    
  </entry>
  
</feed>
